<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{975448C0-1FD6-4CF5-9341-CC12FDABA8D6}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>leetcode</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Text Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="167.Two Sum II - Input array is sorted.cpp" />
    <ClCompile Include="295.Find Median from Data Stream.cpp" />
    <ClCompile Include="0.record.cpp" />
    <ClCompile Include="1. Two Sum.cpp" />
    <ClCompile Include="10. Regular Expression Matching.cpp" />
    <ClCompile Include="100. Same Tree.cpp" />
    <ClCompile Include="101. Symmetric Tree.cpp" />
    <ClCompile Include="103. Binary Tree Zigzag Level Order Traversal.cpp" />
    <ClCompile Include="104. Maximum Depth of Binary Tree .cpp" />
    <ClCompile Include="105. Construct Binary Tree from Preorder and Inorder Traversal.cpp" />
    <ClCompile Include="106. Construct Binary Tree from Inorder and Postorder Traversal.cpp" />
    <ClCompile Include="107. Binary Tree Level Order Traversal II.cpp" />
    <ClCompile Include="108. Convert Sorted Array to Binary Search Tree.cpp" />
    <ClCompile Include="11.Container With Most Water.cpp" />
    <ClCompile Include="110. Balanced Binary Tree.cpp" />
    <ClCompile Include="113. Path Sum II.cpp" />
    <ClCompile Include="114. Flatten Binary Tree to Linked List.cpp" />
    <ClCompile Include="116. Populating Next Right Pointers in Each Node.cpp" />
    <ClCompile Include="117. Populating Next Right Pointers in Each Node I.cpp" />
    <ClCompile Include="118. Pascal%27s Triangle.cpp" />
    <ClCompile Include="12. Integer to Roman.cpp" />
    <ClCompile Include="120. Triangle.cpp" />
    <ClCompile Include="121. Best Time to Buy and Sell Stock.cpp" />
    <ClCompile Include="122. Best Time to Buy and Sell Stock II.cpp" />
    <ClCompile Include="125. Valid Palindrome.cpp" />
    <ClCompile Include="127. Word Ladder.cpp" />
    <ClCompile Include="13. Roman to Integer.cpp" />
    <ClCompile Include="130. Surrounded Regions .cpp" />
    <ClCompile Include="131. Palindrome Partitioning.cpp" />
    <ClCompile Include="134. Gas Station.cpp" />
    <ClCompile Include="136. Single Number.cpp" />
    <ClCompile Include="137. Single Number II.cpp" />
    <ClCompile Include="138. Copy List with Random Pointer.cpp" />
    <ClCompile Include="139. Word Break .cpp" />
    <ClCompile Include="14. Longest Common Prefix.cpp" />
    <ClCompile Include="141. Linked List Cycle.cpp" />
    <ClCompile Include="142. Linked List Cycle II.cpp" />
    <ClCompile Include="143. Reorder List.cpp" />
    <ClCompile Include="144. Binary Tree Preorder Traversal.cpp" />
    <ClCompile Include="145. Binary Tree Postorder Traversal.cpp" />
    <ClCompile Include="146. LRU Cache.cpp" />
    <ClCompile Include="148. Sort List .cpp" />
    <ClCompile Include="15.3Sum.cpp" />
    <ClCompile Include="150. Evaluate Reverse Polish Notation.cpp" />
    <ClCompile Include="152. Maximum Product Subarray.cpp" />
    <ClCompile Include="155. Min Stack.cpp" />
    <ClCompile Include="16. 3Sum Closest.cpp" />
    <ClCompile Include="160. Intersection of Two Linked Lists.cpp" />
    <ClCompile Include="162. Find Peak Element   .cpp" />
    <ClCompile Include="166. Fraction to Recurring Decimal  .cpp" />
    <ClCompile Include="169. Majority Element .cpp" />
    <ClCompile Include="17.Letter Combinations of a Phone Number.cpp" />
    <ClCompile Include="171. Excel Sheet Column Number.cpp" />
    <ClCompile Include="172. Factorial Trailing Zeroes  .cpp" />
    <ClCompile Include="179. Largest Number.cpp" />
    <ClCompile Include="18. 4Sum.cpp" />
    <ClCompile Include="187. Repeated DNA Sequences.cpp" />
    <ClCompile Include="189. Rotate Array .cpp" />
    <ClCompile Include="19. Remove Nth Node From End of List.cpp" />
    <ClCompile Include="190. Reverse Bits.cpp" />
    <ClCompile Include="191. Number of 1 Bits.cpp" />
    <ClCompile Include="198. House Robber.cpp" />
    <ClCompile Include="199. Binary Tree Right Side View.cpp" />
    <ClCompile Include="2. Add Two Numbers.cpp" />
    <ClCompile Include="20. Valid Parentheses.cpp" />
    <ClCompile Include="200. Number of Islands.cpp" />
    <ClCompile Include="202. Happy Number.cpp" />
    <ClCompile Include="204. Count Primes.cpp" />
    <ClCompile Include="206. Reverse Linked List.cpp" />
    <ClCompile Include="207. Course Schedule.cpp" />
    <ClCompile Include="208. Implement Trie (Prefix Tree).cpp" />
    <ClCompile Include="21. Merge Two Sorted Lists.cpp" />
    <ClCompile Include="210.Course Schedule II .cpp" />
    <ClCompile Include="215. Kth Largest Element in an Array.cpp" />
    <ClCompile Include="217.Contains Duplicate .cpp" />
    <ClCompile Include="22. Generate Parentheses.cpp" />
    <ClCompile Include="224. Basic Calculator.cpp" />
    <ClCompile Include="225. Implement Stack using Queues.cpp" />
    <ClCompile Include="227.Basic Calculator II .cpp" />
    <ClCompile Include="23. Merge k Sorted Lists.cpp" />
    <ClCompile Include="230. Kth Smallest Element in a BST   .cpp" />
    <ClCompile Include="232. Implement Queue using Stacks.cpp" />
    <ClCompile Include="234.Palindrome Linked List .cpp" />
    <ClCompile Include="236. Lowest Common Ancestor of a Binary Tree.cpp" />
    <ClCompile Include="237. Delete Node in a Linked List .cpp" />
    <ClCompile Include="238. Product of Array Except Self .cpp" />
    <ClCompile Include="239. Sliding Window Maximum.cpp" />
    <ClCompile Include="24. Swap Nodes in Pairs.cpp" />
    <ClCompile Include="240.Search a 2D Matrix II.cpp" />
    <ClCompile Include="242.Valid Anagram .cpp" />
    <ClCompile Include="25.Reverse Nodes in k-Group .cpp" />
    <ClCompile Include="26. Remove Duplicates from Sorted Array.cpp" />
    <ClCompile Include="260.Single Number II.cpp" />
    <ClCompile Include="268. Missing Number.cpp" />
    <ClCompile Include="279. Perfect Squares.cpp" />
    <ClCompile Include="28. Implement strStr().cpp" />
    <ClCompile Include="283.Move Zeroes.cpp" />
    <ClCompile Include="287.Find the Duplicate Number.cpp" />
    <ClCompile Include="289.Game of Life.cpp" />
    <ClCompile Include="29. Divide Two Integers.cpp" />
    <ClCompile Include="290. Word Pattern.cpp" />
    <ClCompile Include="297.Serialize and Deserialize Binary Tree.cpp" />
    <ClCompile Include="3. Longest Substring Without Repeating Characters.cpp" />
    <ClCompile Include="300.Longest Increasing Subsequence .cpp" />
    <ClCompile Include="31.Next Permutation.cpp" />
    <ClCompile Include="32. Longest Valid Parentheses.cpp" />
    <ClCompile Include="322. Coin Change.cpp" />
    <ClCompile Include="324. Wiggle Sort II .cpp" />
    <ClCompile Include="326.Power of Three.cpp" />
    <ClCompile Include="328.Odd Even Linked List.cpp" />
    <ClCompile Include="33. Search in Rotated Sorted Array.cpp" />
    <ClCompile Include="334.Increasing Triplet Subsequence .cpp" />
    <ClCompile Include="34. Find First and Last Position of Element in Sorted Array.cpp" />
    <ClCompile Include="344. Reverse String.cpp" />
    <ClCompile Include="347.Top K Frequent Elements  .cpp" />
    <ClCompile Include="35. Search Insert Position.cpp" />
    <ClCompile Include="36. Valid Sudoku.cpp" />
    <ClCompile Include="376. Wiggle Subsequence.cpp" />
    <ClCompile Include="378.Kth Smallest Element in a Sorted Matrix.cpp" />
    <ClCompile Include="38. Count and Say.cpp" />
    <ClCompile Include="380.Insert Delete GetRandom O(1).cpp" />
    <ClCompile Include="384.Shuffle an Array .cpp" />
    <ClCompile Include="387.First Unique Character in a String.cpp" />
    <ClCompile Include="395.Longest Substring with At Least K Repeating Characters .cpp" />
    <ClCompile Include="4.Median of Two Sorted Arrays .cpp" />
    <ClCompile Include="40. Combination Sum II.cpp" />
    <ClCompile Include="402. Remove K Digits.cpp" />
    <ClCompile Include="409. Longest Palindrome.cpp" />
    <ClCompile Include="41.First Missing Positive .cpp" />
    <ClCompile Include="412.Fizz Buzz.cpp" />
    <ClCompile Include="42.Trapping Rain Water .cpp" />
    <ClCompile Include="43Multiply Strings.cpp" />
    <ClCompile Include="437. Path Sum III .cpp" />
    <ClCompile Include="44.Wildcard Matching.cpp" />
    <ClCompile Include="445. Add Two Numbers II.cpp" />
    <ClCompile Include="449. Serialize and Deserialize BST.cpp" />
    <ClCompile Include="45. Jump Game II.cpp" />
    <ClCompile Include="452. Minimum Number of Arrows to Burst Balloons.cpp" />
    <ClCompile Include="454. 4Sum II.cpp" />
    <ClCompile Include="455. Assign Cookies.cpp" />
    <ClCompile Include="46. Permutations.cpp" />
    <ClCompile Include="47. Permutations II.cpp" />
    <ClCompile Include="473. Matchsticks to Square.cpp" />
    <ClCompile Include="48. Rotate Image.cpp" />
    <ClCompile Include="49. Group Anagrams.cpp" />
    <ClCompile Include="5.Longest Palindromic Substring.cpp" />
    <ClCompile Include="50. Pow(x, n).cpp" />
    <ClCompile Include="53. Maximum Subarray.cpp" />
    <ClCompile Include="54. Spiral Matrix.cpp" />
    <ClCompile Include="55. Jump Game.cpp" />
    <ClCompile Include="56. Merge Intervals.cpp" />
    <ClCompile Include="572. Subtree of Another Tree.cpp" />
    <ClCompile Include="58. Length of Last Word.cpp" />
    <ClCompile Include="60. Permutation Sequence.cpp" />
    <ClCompile Include="61. Rotate List.cpp" />
    <ClCompile Include="62 .Unique Paths.cpp" />
    <ClCompile Include="621. Task Scheduler.cpp" />
    <ClCompile Include="653.Two Sum IV - Input is a BST .cpp" />
    <ClCompile Include="66. Plus One.cpp" />
    <ClCompile Include="67. Add Binary.cpp" />
    <ClCompile Include="69. Sqrt(x) .cpp" />
    <ClCompile Include="7. Reverse Integer.cpp" />
    <ClCompile Include="70. Climbing Stairs.cpp" />
    <ClCompile Include="71. Simplify Path.cpp" />
    <ClCompile Include="73. Set Matrix Zeroes.cpp" />
    <ClCompile Include="75. Sort Colors.cpp" />
    <ClCompile Include="754.Reach a Number  .cpp" />
    <ClCompile Include="78. Subsets.cpp" />
    <ClCompile Include="79. Word Search.cpp" />
    <ClCompile Include="8. String to Integer (atoi).cpp" />
    <ClCompile Include="80. Remove Duplicates from Sorted Array II.cpp" />
    <ClCompile Include="81. Search in Rotated Sorted Array II.cpp" />
    <ClCompile Include="82. Remove Duplicates from Sorted List II.cpp" />
    <ClCompile Include="83. Remove Duplicates from Sorted List.cpp" />
    <ClCompile Include="86. Partition List.cpp" />
    <ClCompile Include="876.Middle of the Linked List.cpp" />
    <ClCompile Include="88. Merge Sorted Array.cpp" />
    <ClCompile Include="89. Gray Code.cpp" />
    <ClCompile Include="9. AC_Palindrome Number.cpp" />
    <ClCompile Include="90. Subsets II.cpp" />
    <ClCompile Include="91. Decode Ways .cpp" />
    <ClCompile Include="92. Reverse Linked List II.cpp" />
    <ClCompile Include="94. Binary Tree Inorder Traversal.cpp" />
    <ClCompile Include="102. Binary Tree Level Order Traversal.cpp" />
    <ClCompile Include="96. Unique Binary Search Trees.cpp" />
    <ClCompile Include="98. Validate Binary Search Tree   .cpp" />
    <ClCompile Include="googlemianshi.cpp" />
    <ClCompile Include="knapsack_complete.cpp" />
    <ClCompile Include="jianzhioffer_68_CommonParentInTree.cpp" />
    <ClCompile Include="jianzhioffer_03_02_DuplicationInArrayNoEdit.cpp" />
    <ClCompile Include="jianzhioffer_07_ConstructBinaryTree.cpp" />
    <ClCompile Include="jianzhioffer_09_QueueWithTwoStacks.cpp" />
    <ClCompile Include="jianzhioffer_11_MinNumberInRotatedArray.cpp" />
    <ClCompile Include="jianzhioffer_12_StringPathInMatrix.cpp" />
    <ClCompile Include="jianzhioffer_13_RobotMove.cpp" />
    <ClCompile Include="jianzhioffer_17_Print1ToMaxOfNDigits.cpp" />
    <ClCompile Include="jianzhioffer_18_01_DeleteNodeInList.cpp" />
    <ClCompile Include="jianzhioffer_41_StreamMedian.cpp" />
    <ClCompile Include="jianzhioffer_44_DigitsInSequence.cpp" />
    <ClCompile Include="jianzhioffer_46_TranslateNumbersToStrings.cpp" />
    <ClCompile Include="jianzhioffer_47_MaxValueOfGifts.cpp" />
    <ClCompile Include="jianzhioffer_48_LongestSubstringWithoutDup.cpp" />
    <ClCompile Include="jianzhioffer_53_02_MissingNumber.cpp" />
    <ClCompile Include="jianzhioffer_53_03_IntegerIdenticalToIndex.cpp" />
    <ClCompile Include="jianzhioffer_54_KthNodeInBST.cpp" />
    <ClCompile Include="jianzhioffer_56_01_NumbersAppearOnce.cpp" />
    <ClCompile Include="jianzhioffer_03_01_DuplicationInArray.cpp" />
    <ClCompile Include="jianzhioffer_06_PrintListInReversedOrder.cpp" />
    <ClCompile Include="jianzhioffer_08_NextNodeInBinaryTrees.cpp" />
    <ClCompile Include="jianzhioffer_10_01Fibonacci.cpp" />
    <ClCompile Include="jianzhioffer_14_CuttingRope.cpp" />
    <ClCompile Include="jianzhioffer_18_02_DeleteDuplicatedNode.cpp" />
    <ClCompile Include="jianzhioffer_19_RegularExpressionsMatching.cpp" />
    <ClCompile Include="jianzhioffer_20_NumericStrings.cpp" />
    <ClCompile Include="jianzhioffer_28_SymmetricalBinaryTree.cpp" />
    <ClCompile Include="jianzhioffer_32_02_PrintTreesInLines.cpp" />
    <ClCompile Include="jianzhioffer_37_SerializeBinaryTrees.cpp" />
    <ClCompile Include="jianzhioffer_38_StringPermutation.cpp" />
    <ClCompile Include="jianzhioffer_04_FindInPartiallySortedMatrix.cpp" />
    <ClCompile Include="jianzhioffer_05_ReplaceSpaces.cpp" />
    <ClCompile Include="jianzhioffer_15_NumberOf1InBinary.cpp" />
    <ClCompile Include="jianzhioffer_16_Power.cpp" />
    <ClCompile Include="jianzhioffer_21_ReorderArray.cpp" />
    <ClCompile Include="jianzhioffer_22_KthNodeFromEnd.cpp" />
    <ClCompile Include="jianzhioffer_24_ReverseList.cpp" />
    <ClCompile Include="jianzhioffer_25_MergeSortedLists.cpp" />
    <ClCompile Include="jianzhioffer_26_SubstructureInTree.cpp" />
    <ClCompile Include="jianzhioffer_27_MirrorOfBinaryTree.cpp" />
    <ClCompile Include="jianzhioffer_29_PrintMatrixcpp.cpp" />
    <ClCompile Include="jianzhioffer_30_MinInStack.cpp" />
    <ClCompile Include="jianzhioffer_31_StackPushPopOrder.cpp" />
    <ClCompile Include="jianzhioffer_32_01_PrintTreeFromTopToBottom.cpp" />
    <ClCompile Include="jianzhioffer_33_SquenceOfBST.cpp" />
    <ClCompile Include="jianzhioffer_34_PathInTree.cpp" />
    <ClCompile Include="jianzhioffer_35_CopyComplexList.cpp" />
    <ClCompile Include="jianzhioffer_36_ConvertBinarySearchTree.cpp" />
    <ClCompile Include="jianzhioffer_39_MoreThanHalfNumber.cpp" />
    <ClCompile Include="jianzhioffer_40_KLeastNumbers.cpp" />
    <ClCompile Include="jianzhioffer_42_GreatestSumOfSubarrays.cpp" />
    <ClCompile Include="jianzhioffer_49_UglyNumber.cpp" />
    <ClCompile Include="jianzhioffer_50_01_FirstNotRepeatingChar.cpp" />
    <ClCompile Include="jianzhioffer_51_InversePairs.cpp" />
    <ClCompile Include="jianzhioffer_52_FirstCommonNodesInLists.cpp" />
    <ClCompile Include="jianzhioffer_53_01_NumberOfK.cpp" />
    <ClCompile Include="jianzhioffer_55_01_TreeDepth.cpp" />
    <ClCompile Include="jianzhioffer_55_02_BalancedBinaryTree.cpp" />
    <ClCompile Include="jianzhioffer_56_02_NumberAppearingOnce.cpp" />
    <ClCompile Include="jianzhioffer_57_01_TwoNumbersWithSum.cpp" />
    <ClCompile Include="jianzhioffer_57_02_ContinuousSquenceWithSum.cpp" />
    <ClCompile Include="jianzhioffer_58_01_ReverseWordsInSentence.cpp" />
    <ClCompile Include="jianzhioffer_58_02_LeftRotateString.cpp" />
    <ClCompile Include="jianzhioffer_59_01_MaxInSlidingWindow.cpp" />
    <ClCompile Include="jianzhioffer_59_02_QueueWithMax.cpp" />
    <ClCompile Include="jianzhioffer_60_DicesProbability.cpp" />
    <ClCompile Include="jianzhioffer_61_ContinousCards.cpp" />
    <ClCompile Include="jianzhioffer_62_LastNumberInCircle.cpp" />
    <ClCompile Include="jianzhioffer_63_MaximalProfit.cpp" />
    <ClCompile Include="jianzhioffer_64_Accumulate.cpp" />
    <ClCompile Include="jianzhioffer_65_AddTwoNumbers.cpp" />
    <ClCompile Include="jianzhioffer_66_ConstuctArray.cpp" />
    <ClCompile Include="jianzhioffer_67_StringToInt.cpp" />
    <ClCompile Include="jianzhioffer_10_03changejumpsteps.cpp" />
    <ClCompile Include="jianzhioffer_23_EntryNodeInListLoop.cpp" />
    <ClCompile Include="jianzhioffer_50_02_FirstCharacterInStream.cpp" />
    <ClCompile Include="jianzhioffer_10_02jumpsteps.cpp" />
    <ClCompile Include="jianzhioffer_32_03_PrintTreesInZigzag.cpp" />
    <ClCompile Include="jianzhioffer_43_NumberOf1.cpp" />
    <ClCompile Include="jianzhioffer_45_SortArrayForMinNumber.cpp" />
    <ClCompile Include="jianzhioffer_10_04matrixcovering.cpp" />
    <ClCompile Include="knapsack01.cpp" />
    <ClCompile Include="knapscak_multi.cpp" />
    <ClCompile Include="leetcode.cpp" />
    <ClCompile Include="nowcodergirl_eatpeach.cpp" />
    <ClCompile Include="paixu_bubblesort.cpp" />
    <ClCompile Include="paixu_bucketsort.cpp" />
    <ClCompile Include="paixu_countsort.cpp" />
    <ClCompile Include="paixu_heapsort.cpp" />
    <ClCompile Include="paixu_insertsort.cpp" />
    <ClCompile Include="paixu_mergesort.cpp" />
    <ClCompile Include="paixu_quicksort.cpp" />
    <ClCompile Include="paixu_radixsort.cpp" />
    <ClCompile Include="paixu_selectsort.cpp" />
    <ClCompile Include="paixu_shellsort.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="nowcodergirl_Knapsack problem.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>